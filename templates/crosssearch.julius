$(document).ready(function(){
  $('#includeterminated').change(function(){
    reload_projects();
    $( $(this).attr('target') ).change();
  });

  $('#project_name').bind('textchange', function() {
    reload_projects();
    $( $(this).attr('target') ).change();
  });
  $('#project_name').bind('notext', function() {
    reload_projects();
    $( $(this).attr('target') ).change();
  });

  $('#projectid').change(function(){
    reload_statuses();
    reload_assigns();
    reload_search_result();
  });

  $('#status, #assign, #limitdatefrom, #limitdateto, #updatedfrom, #updatedto')
  .change(function(){
    reload_search_result();
  });

  $('.complement').click(function(){
    var target = $( $(this).attr('target') + ' option' );
    target.each(function(){
      $(this).attr('selected', !$(this).attr('selected'));
    });
    $( $(this).attr('target') ).change();
    return false;
  });

  reload_statuses();
  reload_assigns();
  reload_search_result();
});

function collect_condition(page) {
  var keys = '';
  $('#projectid option:selected, #status option:selected, #assign option:selected')
  .each(function(){
    keys = keys + $(this).parent().attr('name') + '=' + encodeURI( $(this).val() ) + '&';
  });
  $('#limitdatefrom, #limitdateto, #updatedfrom, #updatedto').each(function(){
    if ($(this).val() != "")
       keys = keys + $(this).attr('name') + '=' + encodeURI( $(this).val() ) + '&';
  });
  keys = keys + "page=" + page
  return keys;
}

function create_issue_line(item) {
  var tr = $('<tr/>'),
      project = $('<td/>'),
      no = $('<td/>').addClass('number').text(item.no),
      subject = $('<td/>'),
      status = $('<td/>').text(item.status),
      assign = $('<td/>').text(item.assign),
      limitdate = $('<td/>').text(item.limitdate),
      creator = $('<td/>').text(item.creator),
      updator = $('<td/>').text(item.updator),
      updated = $('<td/>').text(item.updated),
      link2project = $('<a/>').attr({href: item.projecturi}).text(item.project),
      link2issue = $('<a/>').attr({href: item.issueuri}).text(item.subject);
  if(item.effect!="") tr.addClass(item.effect);
  if(item.color!="") tr.attr({bgcolor: item.color});
  tr.append(project.append(link2project))
    .append(no)
    .append(subject.append(link2issue))
    .append(status)
    .append(assign)
    .append(limitdate)
    .append(creator)
    .append(updator)
    .append(updated);
  return tr;
}

function reload_search_result() {
  // clear
  $('#cross-search-result tr').remove();

  // search
  $.ajax({
    async: true,
    type: 'POST',
    url: '@{CrossSearchR}',
    dataType: 'json',
    data: collect_condition(0),
    success: function(json){
      var ilist = json.issues;
      $.each(ilist, function(i, item){
        var tr = create_issue_line(item);
        $('#cross-search-result').append(tr);
        tr.hide().fadeIn();
      });
      var more = create_twitter_like_more(1),
          moretr = $('<tr/>').addClass('more').append($('<td colspan="9"/>').addClass('center').append(more));
      $('#cross-search-result').append(moretr);
    },
    error: function (res, status) {

    }
  });
}

function create_twitter_like_more(next) {
  var more = $('<div/>').attr({id: 'twitter-like-more-' + next, nextpage: next}).text('more');
  more.click(function(){
    $('#twitter-like-more-' + next).hide();
    var loading = $('<img/>').attr({src: '@{StaticR img_loading_gif}'});
    $('#twitter-like-more-' + next).closest('td').append(loading);
    $.ajax({
      async: false,
      type: 'POST',
      url: '@{CrossSearchR}',
      dataType: 'json',
      data: collect_condition(next),
      success: function (json) {
        var ilist = json.issues;
        $.each(ilist, function(i, item){
          var tr = create_issue_line(item);
          $('#cross-search-result').append(tr);
          tr.hide().fadeIn();
        });
        var more = create_twitter_like_more(next+1),
            moretr = $('<tr/>').addClass('more').append($('<td colspan="9"/>').addClass('center').append(more));
        $('#cross-search-result').append(moretr);
        $('#twitter-like-more-' + next).closest('tr').remove();
      },
      error: function (res, status) {

      }
    });
  });
  return more;
}

function reload_projects() {
  // clear
  $('#projectid option').remove();

  // get projectids
  var keys = '';
  if ($('#includeterminated').attr('checked')) {
    keys += $('#includeterminated').attr('name') + '=' + $('#includeterminated').attr('checked') + '&';
  }
  if ($('#project_name').val()) {
    keys += $('#project_name').attr('name') + '=' + encodeURI($('#project_name').val()) +'&';
  }
  $.ajax({
    async: false,
    type: 'GET',
    url: '@{ProjectListR}',
    dataType: 'json',
    data: keys,
    success: function(json) {
      $.each(json.projects, function(i, p) {
        var opt = $('<option/>').val(p.pid).text(p.name).attr('selected', true);
        $('#projectid').append(opt);
      });
    },
    error: function(res, status) {
    }
  });
}

function reload_statuses() {
  // save selected
  var selected = {};
  $('#status option:selected').each(function(){
    selected[$(this).val()] = $(this).val();
  });
  // clear
  $('#status option').remove();

  // get statuses
  var keys = '';
  $('#projectid option:selected').each(function(){
    keys = keys + $(this).parent().attr('name') + '=' + encodeURI( $(this).val() ) + '&';
  });
  $.ajax({
    async: false,
    type: 'GET',
    url: '@{StatusListR}',
    dataType: 'json',
    data: keys,
    success: function(json){
      var slist = json.statuses;
      $.each(slist, function(i, s){
        var opt = $('<option/>').text(s);
        if (selected[s]) opt.attr('selected', 'selected');
        $('#status').append(opt);
      });
    },
    error: function (res, status) {
    }
  });
}

function reload_assigns() {
  // save selected
  var selected = {};
  $('#assign option:selected').each(function(){
    selected[$(this).val()] = $(this).val();
  });
  // clear
  $('#assign option').remove();

  // get participants
  var keys = '';
  $('#projectid option:selected').each(function(){
    keys = keys + $(this).parent().attr('name') + '=' + encodeURI( $(this).val() ) + '&';
  });

  $.ajax({
    async: false,
    type: 'GET',
    url: '@{AssignListR}',
    dataType: 'json',
    data: keys,
    success: function(json) {
    var alist = json.assigns;
      $.each(alist, function(i, a){
        var opt = $('<option/>').val(a.uid).text(a.name);
        if (selected[a.uid]) opt.attr('selected', 'selected');
        $('#assign').append(opt);
      });
    },
    error: function (res, status) {
    }
  });
}

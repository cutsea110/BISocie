$(document).ready(function(){
  $('#delete-success').hide().attr('title', '削除成功').dialog({
    autoOpen: false,
    width:400,
    modal: true,
    buttons: {
      '閉じる': function(){
        $(this).dialog('close');
        location.href='@{HomeR selfid}';
      }
    }
  });
  $('#delete-failed').hide().attr('title', '削除失敗').dialog({
    autoOpen: false,
    width:400,
    modal: true,
    buttons: {
      '閉じる': function(){
        $(this).dialog('close');
      }
    }
  });
  $('#delete-confirm').hide().attr('title', '[警告] 確認ダイアログ').dialog({
    autoOpen: false,
    width: 400,
    modal: true,
    buttons: {
      'キャンセル': function(){
        $(this).dialog('close');
      },
      '削除する': function(){
        $.ajax({
          async: false,
          type: 'POST',
          url: '@{ProjectR pid}',
          dataType: 'json',
          data: {_method: 'delete'},
          success: function(json){
            $('#delete-confirm').dialog('close');
            if (json.deleted) {
              $('#delete-success').dialog('open');
            } else {
              $('#delete-failed').dialog('open');
            }
          },
          error: function(res, status){
            $('#delete-confirm').dialog('close');
            $('#delete-failed').dialog('open');
          }
        });
      }
    }
  });

  $('#button-delete-confirm').click(function(){
    $('#delete-confirm').dialog('open');
  });

  $('#release-self-participate').hide().attr('title', '強制移動前確認').dialog({
    autoOpen: false,
    width:400,
    modal: true,
    buttons: {
      '閉じる': function(){
        $(this).dialog('close');
        location.href='@{HomeR selfid}';
      }
    }
  });

  $('#search-users').hide().attr('title', 'ユーザ検索').dialog({
    autoOpen: false,
    width: 500,
    modal: true
  });

  reloading_participants();

  $('#button-search-users').click(function(){
    $('#search-users').dialog('open');
    $.getJSON('@{UserListR}', function(json){
      var us = json.userlist;
      $('#search-result .user-logo').remove();
      $.getJSON('@{ParticipantsListR pid}', function(json) {
       var ps = json2hash(json.participants);
         $.each(us, function(i, u){
          $('#search-result').append(mkUser(u, ps));
        });
        filter_users();
      });
    });
    return false;
  });

  $("#select-teacher,#select-staff,#select-student,#select-admin").click(function(){
    filter_users();
  });

  $('#search-by-name').keyup(function(){
    filter_users();
  });

  $('#select-entry-year').change(function(){
    filter_users();
  });

  $('#all-filtered-set').click(function(){
    $("#search-result .user-logo:visible input[type='checkbox']:not(:checked)").each(function(){
      $(this).attr('checked',true);
      modifyParticipant($(this));
    });
    reloading_participants();
  });
  $('#all-filtered-reset').click(function(){
    $("#search-result .user-logo:visible input[type='checkbox']:checked").each(function(){
      $(this).attr('checked',false);
      modifyParticipant($(this));
    });
    reloading_participants();
  });

});

function filter_users() {
    var selector = "";
    var user = "#search-result .user-logo";
    $(user).hide();

    var name = $('#search-by-name').attr('value');
    var contains_name = "";
    if (name!=null && name!=""){
      contains_name = ":contains('" + name + "')";
    }

    var eyear = $('#select-entry-year').attr('value');
    var select_eyear="";
    if (eyear!=null && eyear!=""){
      select_eyear = "[eyear='"+eyear+"']";
    }

    var ct = $("#select-teacher").attr('checked'),
        co = $("#select-staff").attr('checked'),
        cs = $("#select-student").attr('checked'),
        ca = $("#select-admin").attr('checked');
    if (ct||co||cs||ca) {
      if (ct) {
        selector = selector + (',' + user + ".Teacher" + select_eyear + contains_name);
      }
      if (co) {
        selector = selector + (',' + user + ".Staff" + select_eyear + contains_name);
      }
      if (cs) {
        selector = selector + (',' + user + ".Student" + select_eyear + contains_name);
      }
      if (ca) {
        selector = selector + (',' + user + ".Admin" + select_eyear + contains_name);
      }
    }else{
      selector = user + select_eyear + contains_name;
    }
    // for debug
    // alert(selector);
    $(selector).show();
}

function reloading_participants() {
   // clear
   $('#participants .user-logo').remove();
   // load
   $.getJSON('@{ParticipantsListR pid}', {uncache: (new Date).getTime()}, function(json) {
     var ps = json2hash(json.participants);
     $.each(json.participants, function(i, u){
       $('#participants').append(mkUser(u, ps));
     });
   });
}

function json2hash(ps){
  var ret = {};
  for(var i=0;i<ps.length;i++){
    ret[ps[i].id] = ps[i];
  }
  return ret;
}

function mkUser(u, ps){
  var div = $("<div class='inline user'/>")
            .attr({uid: u.id, ident: u.ident, fullname: u.name, eyear: u.entryYear})
            .addClass(u.role+' user-logo'),
      c = $('<input/>').attr({type:'checkbox'}),
      avatar = $("<img class='avatar'/>").attr({src: u.avatar}),
      s =$('<a/>').attr({href: u.uri}).html(u.name+'<br/>('+u.ident+')'),
      mail = $('<img/>').addClass('mail');

  if (ps[u.id]){
    switch (ps[u.id].receivemail){
      case 'True':
            mail.attr({src: '@{StaticR img_mail_accept_png}', receivemail: 'send'});
            break;
      case 'False':
            mail.attr({src: '@{StaticR img_mail_error_png}', receivemail: 'stop'});
            break;
    }
  }else{
    mail.attr({src: '@{StaticR img_mail_checked_png}', receivemail: 'none'});
  }

  if('#{show (canEditProjectSetting self)}'=='False')
    return div.append(s).append(mail).append(avatar);

  if (ps[u.id])c.attr('checked', true);
  c.click(function(){
    modifyParticipant(c);
    reloading_participants();
  });
  mail.click(function(){
    toggleSendmailParticipant(mail);
    $("#participants .user-logo[uid='" + u.id + "'] img.mail")
    .attr({src: mail.attr('src'), receivemail: mail.attr('receivemail')});
  }).addClass('clickable');

  return div.append(c).append(s).append(mail).append(avatar);
}

function modifyParticipant(c){
  var uid = c.closest('div').attr('uid'),
      checked = c.attr('checked'),
      method = checked ? "add" : "del",
      mail = c.closest('div').find("img.mail");

  $.ajax({
    async: false,
    type: 'POST',
    url: '@{ParticipantsR pid}',
    dataType: 'json',
    data: {_method: method, uid: uid},
    success: function (json) {
      switch (json.participants.status) {
        case 'added':
          mail.attr({src: '@{StaticR img_mail_accept_png}', receivemail: 'send'});
          break;
        case 'deleted':
          mail.attr({src: '@{StaticR img_mail_checked_png}', receivemail: 'none'});
          if (json.participants.user == '#{show selfid}') {
            $('#release-self-participate').dialog('open');
          }
          break;
      }
    },
    error: function(res, status) {
      c.attr({checked: !checked});
      var msg = $('<div/>').attr('id', 'message').text($(res.responseText).find('p').text());
      msg.insertBefore($('#ui-main')).fadeOut(3000, function(){msg.remove();});
    }
  });
}

function toggleSendmailParticipant(mail){
  var uid = mail.closest('div').attr('uid'),
      method = "mod",
      sendstop = 'none';

  switch (mail.attr('receivemail')) {
    case 'send':
      sendstop = 'stop';
      break;
    case 'stop':
      sendstop = 'send';
      break;
    case 'none':
      // NONE
      return false;
  }

  $.ajax({
    async: false,
    type: 'POST',
    url: '@{ParticipantsR pid}',
    dataType: 'json',
    data: {_method: method, mail: sendstop, uid: uid},
    success: function (json) {
      switch (json.participants.mail) {
        case "send":
          mail.attr({src: '@{StaticR img_mail_accept_png}', receivemail: 'send'});
          break;
        case "stop":
          mail.attr({src: '@{StaticR img_mail_error_png}', receivemail: 'stop'});
          break;
      }
    },
    error: function (res, status) {

    }
  });
}
